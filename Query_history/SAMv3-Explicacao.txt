--ATENCAO NAO RODAR ESSE SCRIPT ELE É SÓ PARA FINS DE EXPLICACAO DO SQL ASSESSEMENT V3

-- Declaração de variáveis para armazenar as métricas de IOPS e Throughput
DECLARE @totaliops DECIMAL;
DECLARE @Throughput DECIMAL;

-- Cálculo das métricas de IOPS e Throughput
SELECT 
    @totaliops = ISNULL(SUM(io_stall / NULLIF((num_of_reads + num_of_writes), 0)), 0), -- Cálculo do Total de IOPS
    @Throughput = ISNULL(SUM((num_of_bytes_read + num_of_bytes_written) / 1048576), 0) -- Cálculo do Throughput
FROM sys.dm_io_virtual_file_stats(NULL, NULL);

-- Consulta principal
SELECT 
    HostName, -- Nome do host
    NumberOfCPUs AS NumberOfCPU, -- Número de CPUs
    SQLProcessUtilization, -- Utilização do processo SQL
    [System Idle Process] AS [System Idle Process], -- Processo de inatividade do sistema
    [Other Process CPU Utilization], -- Outra utilização de CPU do processo
    TotalMemKB, -- Memória total
    AvaiMemKB, -- Memória disponível
    PLE, -- Expectativa de vida da página
    @totaliops AS TotalIOPS, -- Métrica de IOPS calculada anteriormente
    @Throughput AS Throughput, -- Métrica de Throughput calculada anteriormente
    DatabaseType AS [Database Type], -- Tipo de banco de dados
    [Event Time] -- Hora do evento

FROM (
    SELECT 
        HOST_NAME() AS HostName, -- Nome do host
        (SELECT cpu_count FROM sys.dm_os_sys_info) AS NumberOfCPUs, -- Número de CPUs
        SQLProcessUtilization, -- Utilização do processo SQL
        SystemIdle AS [System Idle Process], -- Processo de inatividade do sistema
        100 - SystemIdle - SQLProcessUtilization AS [Other Process CPU Utilization], -- Outra utilização de CPU do processo
        x.totalMem AS TotalMemKB, -- Memória total
        x.AvaiMem AS AvaiMemKB, -- Memória disponível
        x.PLE, -- Expectativa de vida da página
        @@Version AS DatabaseType, -- Versão do banco de dados
        DATEADD(ms, -1 * ((SELECT cpu_ticks / (cpu_ticks / ms_ticks) FROM sys.dm_os_sys_info) - [timestamp]), GETDATE()) AS [Event Time] -- Hora do evento

    FROM (
        SELECT
            GETDATE() as collectionTime, -- Hora da coleta
            (si.committed_kb / 1024) as Committed, -- Memória comprometida
            (si.committed_target_kb / 1024) as targetCommited, -- Meta de memória comprometida
            (sm.total_physical_memory_kb / 1024) as totalMem, -- Memória física total
            (sm.available_physical_memory_kb / 1024) as AvaiMem, -- Memória física disponível
            (SELECT SUM(cntr_value) / COUNT(*) FROM sys.dm_os_performance_counters 
                WHERE counter_name = 'Page Life expectancy' AND object_name LIKE '%buffer node%') as PLE -- Expectativa de vida da página
        FROM sys.dm_os_sys_info si, sys.dm_os_sys_memory sm
    ) AS x
    CROSS APPLY (
        SELECT TOP(30) 
            record.value('(./Record/SchedulerMonitorEvent/SystemHealth/ProcessUtilization)[1]', 'int') AS SQLProcessUtilization, -- Utilização do processo SQL
            record.value('(./Record/SchedulerMonitorEvent/SystemHealth/SystemIdle)[1]', 'int') AS SystemIdle, -- Processo de inatividade do sistema
            [timestamp] -- Carimbo de data/hora
        FROM (
            SELECT [timestamp], CONVERT(xml, record) AS [record]
            FROM sys.dm_os_ring_buffers 
            WHERE ring_buffer_type = N'RING_BUFFER_SCHEDULER_MONITOR' 
            AND record LIKE '%<SystemHealth>%'
        ) AS x
    ) AS y
) AS CombinedData
ORDER BY [Event Time] DESC; -- Ordena por hora do evento em ordem decrescente
